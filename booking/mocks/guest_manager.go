// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	requests "github.com/loxt/hotel-booking/booking/internal/application/guest/requests"

	responses "github.com/loxt/hotel-booking/booking/internal/application/guest/responses"
)

// GuestManager is an autogenerated mock type for the GuestManager type
type GuestManager struct {
	mock.Mock
}

// CreateGuest provides a mock function with given fields: request
func (_m *GuestManager) CreateGuest(request requests.CreateGuestRequest) (responses.CreateGuestResponse, error) {
	ret := _m.Called(request)

	if len(ret) == 0 {
		panic("no return value specified for CreateGuest")
	}

	var r0 responses.CreateGuestResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(requests.CreateGuestRequest) (responses.CreateGuestResponse, error)); ok {
		return rf(request)
	}
	if rf, ok := ret.Get(0).(func(requests.CreateGuestRequest) responses.CreateGuestResponse); ok {
		r0 = rf(request)
	} else {
		r0 = ret.Get(0).(responses.CreateGuestResponse)
	}

	if rf, ok := ret.Get(1).(func(requests.CreateGuestRequest) error); ok {
		r1 = rf(request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGuestManager creates a new instance of GuestManager. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGuestManager(t interface {
	mock.TestingT
	Cleanup(func())
}) *GuestManager {
	mock := &GuestManager{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
